{"version":3,"sources":["Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","me","App","useState","setCount","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAqBeA,EAhBH,SAACC,GAAD,OAEV,qBAAKC,UAAU,SAAf,SAEE,oBAAIA,UAAU,QAAd,SAAuBD,EAAME,QCkHlBC,MArHf,WAAe,MAGSC,oBAAS,GAHlB,gCAIWA,mBAAS,IAJpB,mBAIAC,GAJA,WAwDX,OAEI,sBAAKJ,UAAU,SAAf,UAGI,cAAC,EAAD,CAAKC,GAxDF,MA2DH,wBAAQI,QAvDpB,WACID,EAAS,MAsD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAvDpB,WACID,EAAS,MAsD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAtDpB,WACID,EAAS,MAqD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAtDpB,WACID,EAAS,MAqD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAtDpB,WACID,EAAS,MAqD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAtDpB,WACID,EAAS,MAqD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QAtDpB,WACID,EAAS,MAqD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoD+BJ,UAAU,OAA1C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,eAGA,wBAAQK,QArDpB,WACID,EAAS,MAoDgCJ,UAAU,OAA3C,mBCpGGM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.01e49c79.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\n\r\nconst Nav = (props) => (\r\n\r\n  <div className=\"button\">\r\n    \r\n    <h1 className=\"item1\">{props.me}</h1>\r\n          \r\n  </div>\r\n  \r\n);\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n\r\nexport default Nav;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Nav from './Nav';\n\n\n\nfunction App() {\n  // Javascript\n\n  const[isRed, setRed]= useState(false)\n  const[count, setCount]= useState(0)\n  const name = \"1\";\n  \n\n\nfunction clickHandler1(){\n    setCount(\"1\");\n}\nfunction clickHandler2(){\n    setCount(\"2\");\n\n}\nfunction clickHandler3(){\n    setCount(\"3\");\n}\nfunction clickHandler4(){\n    setCount(\"4\");\n}\nfunction clickHandler5(){    \n    setCount(\"5\");\n}\nfunction clickHandler6(){  \n    setCount(\"6\");\n}\nfunction clickHandler7(){   \n    setCount(\"7\");\n}\n\nfunction clickHandler8(){   \n    setCount(\"8\");\n}\nfunction clickHandler9(){\n    setCount(\"9\");\n}\nfunction clickHandler10(){       \n    setCount(\"+\");      \n}\nfunction clickHandler11(){    \n    setCount(\"x\");\n}\nfunction clickHandler12(){  \n    setCount(\"=\");\n}\nfunction clickHandler13(){  \n    setCount(\"-\");\n}\nfunction clickHandler14(){  \n    setCount(\"/\");\n}\nfunction clickHandler15(){  \n    setCount(\"c\");\n}\n    return( \n        \n        <div className=\"button\">\n            \n            \n            <Nav me={name}/>\n        \n            \n            <button onClick={clickHandler1} className=\"name\">\n                1\n            </button>\n            <button onClick={clickHandler2} className=\"name\">\n                2\n            </button>\n            <button onClick={clickHandler3} className=\"name\">\n                3\n            </button>\n            <button onClick={clickHandler4} className=\"name\">\n                4\n            </button>\n            <button onClick={clickHandler5} className=\"name\">\n                5\n            </button>\n            <button onClick={clickHandler6} className=\"name\">\n                6\n            </button>\n            <button onClick={clickHandler7} className=\"name\">\n                7\n            </button>\n            <button onClick={clickHandler8} className=\"name\">\n                8\n            </button>\n            <button onClick={clickHandler9} className=\"name\">\n                9\n            </button>\n            <button onClick={clickHandler10} className=\"name\">\n                +\n            </button>\n            <button onClick={clickHandler11} className=\"name\">\n                x\n            </button>\n            <button onClick={clickHandler12} className=\"name\">\n                =\n            </button>\n            <button onClick={clickHandler13} className=\"name\">\n                -\n            </button>\n            <button onClick={clickHandler14} className=\"name\">\n                /\n            </button>\n            <button onClick={clickHandler15} className=\"name\">\n                c\n            </button>\n            \n\n        </div>\n    )\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}